{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersFailed","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","active","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderDish","RenderComments","comments","postComment","dishId","comment","i","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","parseInt","rating","setState","outline","isOpen","toggle","DishDetail","class","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","classNames","timeout","path","component","filter","featured","promotions","promo","error","exact","match","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","Error","status","statusText","json","addComment","catch","message","actions","reset","feedback","newFeedBack","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0296161e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading...</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\nimport {FadeTransform} from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}){\n    if(isLoading){\n        return(\n            <Loading />\n        );\n    }\n    else if(errMess){\n        return(\n        <h4>{errMess}</h4>\n        );\n    }\n    else{\n        return (\n            <FadeTransform in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl+item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    }\n}\n\nfunction Home(props){\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                                isLoading={props.dishesLoading}\n                                errMess={props.dishesErrMess} \n                    /> \n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion} \n                                isLoading={props.promosLoading}\n                                errMess={props.promosErrMess}\n                    />\n                </div>\n                <div className = 'col-12 col-md md-1'>\n\t\t\t\t\t<RenderCard item = {props.leader} \n\t\t\t\t\t\tisLoading = {props.leadersLoading}\n\t\t\t\t\t\terrMess = {props.leadersFailed}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\n\nfunction RenderMenuItem({dish, onClick}){\n    return(\n        <Card>\n            <Link to = {`/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={baseUrl+dish.image} alt={dish.name}/>\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\t\t\n            </Link>\t\t\n        </Card>\t\t\n    );\n}\n\nconst Menu = (props) => {\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\n            </div>\n        );\n    });\n\n    if(props.dishes.isLoading){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if(props.dishes.errMess){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else{\n        return ( \n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\nimport {Fade,Stagger} from 'react-animation-components';\n\nfunction RenderLeader({leader}){\n    return(\n\n        <div key={leader.id} className=\"col-12 mt-5\">\n            <Stagger in>\n                <Fade in>\n                    <Media tag=\"li\">\n                        <Media left middle>\n                            <Media object src={baseUrl+leader.image} alt={leader.name} />\n                        </Media>\n                        <Media body className=\"ml-5\">\n                        <Media heading>{leader.name}</Media>\n                        <p>{leader.designation}</p>\n                        <p>{leader.description}</p>\n                        </Media>\n                    </Media>\n                </Fade>\n            </Stagger>\n        </div>\t\t\n    );\n}\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <div key={leader.id} className=\"col-12 m-1\">\n                <RenderLeader leader={leader} />\n            </div>\n        );\n    });\n\n    if(props.leaders.isLoading){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if(props.leaders.errMess){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.leaders.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else{\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">40</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                        I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                        P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <Media list>\n                            {leaders}\n                        </Media>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default About;    ","import React, {Component} from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, Form, Errors, actions} from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log('submit clicked');\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" \n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 charcters or less'\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" \n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 charcters or less'\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" \n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 numbers',\n                                                maxLength: 'Must be 15 numbers or less',\n                                                isNumber: 'Must be a number'\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\" \n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                />\n                                <Errors className=\"text-danger\" model=\".\" show=\"touched\" \n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Label, Col, Row, Modal, ModalHeader, ModalBody, Form, FormGroup, Input } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, LocalForm, Errors} from 'react-redux-form';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\nimport {FadeTransform, Fade, Stagger} from 'react-animation-components';\n\nfunction RenderDish({dish}) {\n    if(dish != null){\n        return (\n                <div className = 'col-12 col-md-5 m-1'>\n                    <FadeTransform in\n                        transformProps={{\n                            exitTransform: 'scale(0.5) translateY(-50%)'\n                            }}>\n                        <Card>\n                            <CardImg width=\"100%\" src={baseUrl+dish.image} alt={dish.name}/>\n                            <CardBody>\n                                <CardTitle>{dish.name}</CardTitle>\n                                <CardText>{dish.description}</CardText>\n                            </CardBody>\n                        </Card>\n                    </FadeTransform>\n                </div>\n        )\n    }\n}\n\nfunction RenderComments({comments, postComment, dishId}) {\n    if(comments!= null){\n        return (\n            <div className = 'col-12 col-md-5 m-1'>\n\t\t\t\t{\n\t\t\t\t\tcomments.map((comment, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ul className ='list-unstyled' key = {comment.id}>\n                                <Stagger in>\n                                    <Fade in>\n                                        <li>\n                                            <div>{comment.comment}</div>\n                                            <div>{`-- ${comment.author} , ${new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.date)))}`}</div>\n                                        </li>\n                                    </Fade>\n                                </Stagger>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\t\t\t\t\t\n\t\t\t\t}\n                <CommentForm dishId={dishId} postComment={postComment} />\t\n\t\t\t</div>\n\n\t\t\t)\n\t\t}\n\t}\n\n\n\n    const DishDetail = (props) => {\n        if(props.isLoading){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if(props.errMess){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        // if(props.dish === null || props.dish === undefined) return (<div></div>)\n        else if(props.dish != null){\n            const dish = props.dish\n            const comments = props.comments\n\n            return (\n                <div class=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className = 'container'>\n                        <div className = 'row'>\n                            <RenderDish dish = {dish} />\n                            <RenderComments comments = {comments} \n                                            postComment={props.postComment}\n                                            dishId={props.dish.id}\n                            />\t\t    \t\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    handleSubmit(values){\n        this.props.postComment(parseInt(this.props.dishId), values.rating, values.name, values.comment);\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        });\n    }\n\n    render(){\n        return(\n            <div>\n                <Button type=\"submit\" outline onClick={this.toggleModal}>\n                <span className = 'fa fa-pencil fa-lg'></span> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\n                                <Col md={10}>\n                                    <Control.select model=\".rating\" name=\"rating\"\n                                        className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                        <option>6</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" md={2}>Your Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" model=\".name\" show=\"touched\" \n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 charcters or less'\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        rows=\"6\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={10}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Submit\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default DishDetail;","import React, {Component} from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav(){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        });\n    }\n\n    handleLogin(event){\n        this.toggleModal();\n        alert(\"Username: \"+this.username.value + \" Password: \"+this.password.value+\" Remember: \"+this.remember.checked);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\"><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row rowheader\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to='/aboutus'>About Us</Link></li>\n                        <li><Link to='/menu'>Menu</Link></li>\n                        <li><Link to='/contactus'>Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport {baseUrl} from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\nexport const postFeedback = (feedback) => (dispatch) => {\n    const newFeedBack = {\n        feedback: feedback\n    };\n\n    newFeedBack.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedBack),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(feedback => alert('Your feedback is submitted \\n' + JSON.stringify(newFeedBack)))\n\t.catch(error => alert('Your feedback could not be sent'))\n};\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl+'dishes')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var error = new Error('Error ' + response.status + ': '+response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n\n    return fetch(baseUrl+'comments')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n        else{\n            var error = new Error('Error ' + response.status + ': '+response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading());\n\n    return fetch(baseUrl+'promotions')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n        else{\n            var error = new Error('Error ' + response.status + ': '+response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading());\n\n    return fetch(baseUrl+'leaders')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n        else{\n            var error = new Error('Error ' + response.status + ': '+response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n};\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n\n\n\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport About from './AboutComponent';\nimport Contact from './ContactComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback} from '../redux/ActionCreators';\nimport {actions} from 'react-redux-form';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n      dishes: state.dishes,\n      comments: state.comments,\n      promotions: state.promotions,\n      leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => {dispatch(fetchDishes())},\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n  postFeedback: (feedback) => {dispatch(postFeedback(feedback))}\n});\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount(){\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  onDishSelect(dishId) {\n    this.setState({ selectedDish: dishId});\n  }\n\n  render() {\n\n    const HomePage = () => {\n        return(\n            <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                  dishesLoading={this.props.dishes.isLoading}\n                  dishesErrMess={this.props.dishes.errMess}\n                  promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                  promosLoading={this.props.promotions.isLoading}\n                  promosErrMess={this.props.promotions.errMess}\n                  leader = {this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                  leadersLoading = {this.props.leaders.isLoading}\n                  leadersFailed = {this.props.leaders.error}\n            />\n        );\n    }\n    \n    const DishWithId = ({match}) => {\n        return (\n            <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]} \n                        isLoading={this.props.dishes.isLoading}\n                        errMess={this.props.dishes.errMess}\n                        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))} \n                        commentsErrMess={this.props.comments.errMess}\n                        postComment={this.props.postComment}\n            />\n        );\n    }\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n            <Switch>\n                <Route path=\"/home\" component={HomePage} />\n                <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\n                <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\n                <Route exact path=\"/contactus\" component={() => <Contact postFeedback = {this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\n                <Redirect to=\"/home\" />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main)); ","import { DISHES } from '../shared/dishes';\nimport * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes:action.payload}\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes:[]}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes:[]}\n            \n        default:\n            return state;\n    }\n};","import { COMMENTS } from '../shared/comments';\nimport * as ActionTypes from './ActionTypes';\n\n\nexport const Comments = (state = {\n            errMess: null,\n            comments:[]\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments:action.payload}\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments:[]}\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions:action.payload}\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions:[]}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions:[]}\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders:action.payload}\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders:[]}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders:[]}\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport {createForms} from 'react-redux-form';\nimport {Dishes} from './dishes';\nimport {Comments} from './comments';\nimport {Promotions} from './promotions';\nimport {Leaders} from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport {InitialFeedback} from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}